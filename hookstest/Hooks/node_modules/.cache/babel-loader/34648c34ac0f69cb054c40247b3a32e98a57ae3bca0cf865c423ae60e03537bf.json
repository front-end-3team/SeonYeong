{"ast":null,"code":"var _jsxFileName = \"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q1.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n  문제1\r\n  useState 및 styled-components에 관련한 문제입니다.\r\n  아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n    1-1 )\r\n      문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n      초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n      붉은색 글씨로 노출됩니다\r\n    1-2 )\r\n      문제1-2는 보이기 버튼을 누른다면\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n      아래 보이는 p태그가 보여야합니다.\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n      p태그는 보이지 않아야합니다\r\n  */\n\n  //1-1\n\n  const [colors, setColors] = useState(\"text\");\n  const [onText, setOnText] = useState(false);\n  const color = e => {\n    if (e.target.value === e.target.placeholder) {\n      setColors(colors);\n      setOnText(true);\n    } else {\n      setColors(!colors);\n      setOnText(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"김성용\",\n        style: {\n          textAlign: \"center\"\n        },\n        onChange: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        children: \" \\uC62C\\uBC14\\uB974\\uAC8C \\uC785\\uB825\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uBCF4\\uC774\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"OLzBuGnV81UKwd7kF58VeLhMYRA=\");\n_c = Q1;\nexport default Q1;\nconst Message = styled.p`\n    color: ${_ref => {\n  let {\n    e\n  } = _ref;\n  return e === \"text\" ? \"green\" : \"red\";\n}};\n`;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["styled","useState","Q1","colors","setColors","onText","setOnText","color","e","target","value","placeholder","textAlign","Message","p","S"],"sources":["/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Q1() {\r\n    /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n\r\n    //1-1\r\n\r\n    const [colors, setColors] = useState(\"text\");\r\n    const [onText, setOnText] = useState(false);\r\n\r\n    const color = (e) => {\r\n        if (e.target.value === e.target.placeholder) {\r\n            setColors(colors);\r\n            setOnText(true);\r\n        } else {\r\n            setColors(!colors);\r\n            setOnText(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <div>\r\n                <h2>문제1-1.</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={\"김성용\"}\r\n                    style={{ textAlign: \"center\" }}\r\n                    onChange={color}\r\n                />\r\n                <S.Message> 올바르게 입력하셨습니다 </S.Message>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>문제1-2. </h2>\r\n                <button>보이기</button>\r\n                <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n    color: ${({ e }) => (e === \"text\" ? \"green\" : \"red\")};\r\n`;\r\n\r\nconst S = {\r\n    Message,\r\n};\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,EAAE,GAAG;EAAA;EACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAQI;;EAEA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMM,KAAK,GAAIC,CAAC,IAAK;IACjB,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,KAAKF,CAAC,CAACC,MAAM,CAACE,WAAW,EAAE;MACzCP,SAAS,CAACD,MAAM,CAAC;MACjBG,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACHF,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBG,SAAS,CAAC,KAAK,CAAC;IACpB;EACJ,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACI;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAE,KAAM;QACnB,KAAK,EAAE;UAAEM,SAAS,EAAE;QAAS,CAAE;QAC/B,QAAQ,EAAEL;MAAM;QAAA;QAAA;QAAA;MAAA,QAClB,eACF,QAAC,CAAC,CAAC,OAAO;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC,eAEN;MAAA,wBACI;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACpB;QAAA,UAAG;MAA2B;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA,gBACP;AAEX;AAAC,GA5DQL,EAAE;AAAA,KAAFA,EAAE;AA6DX,eAAeA,EAAE;AAEjB,MAAMW,OAAO,GAAGb,MAAM,CAACc,CAAE;AACzB,aAAa;EAAA,IAAC;IAAEN;EAAE,CAAC;EAAA,OAAMA,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,KAAK;AAAA,CAAE;AACzD,CAAC;AAED,MAAMO,CAAC,GAAG;EACNF;AACJ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}