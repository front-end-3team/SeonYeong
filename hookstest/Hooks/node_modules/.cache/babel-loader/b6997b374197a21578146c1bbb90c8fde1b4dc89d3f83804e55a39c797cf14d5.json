{"ast":null,"code":"var _jsxFileName = \"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /* \r\n  문제 1.\r\n    state를 다루기 위한 기초 문제입니다.\r\n  음악 목록 10가지의 mock data가 있습니다.\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n  삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n\n  // const [onPlusSong, setOnPlusSong] = useState(false);\n\n  const [musicList, setMusicList] = useState(PlayListMock.playlist);\n  const [addList, setAddList] = useState({\n    title: \"\",\n    signer: \"\"\n  });\n  const {\n    title,\n    signer\n  } = addList;\n  // 인풋 값\n  const onAddSong = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAddList({\n      ...addList,\n      [name]: value\n    });\n  };\n  // 추가버튼\n  const onAddSongList = () => {\n    const list = {\n      title,\n      signer\n    };\n    setMusicList([...musicList, list]);\n    setAddList({\n      title: \"\",\n      signer: \"\"\n    });\n  };\n  // 삭제버튼\n  const removeBtn = title => {\n    setMusicList(musicList.filter(el => el.title !== title));\n    console.log(musicList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: musicList.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: e.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.signer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeBtn(e.title),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          value: title,\n          onChange: onAddSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"singer\",\n          value: signer,\n          onChange: onAddSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddSongList,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"NClvI/eISXSYG3U+pOgHzl1FCdY=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["useRef","useState","PlayListMock","State1","musicList","setMusicList","playlist","addList","setAddList","title","signer","onAddSong","e","name","value","target","onAddSongList","list","removeBtn","filter","el","console","log","map"],"sources":["/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n    /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n\r\n    // const [onPlusSong, setOnPlusSong] = useState(false);\r\n\r\n    const [musicList, setMusicList] = useState(PlayListMock.playlist);\r\n    const [addList, setAddList] = useState({\r\n        title: \"\",\r\n        signer: \"\",\r\n    });\r\n\r\n    const { title, signer } = addList;\r\n    // 인풋 값\r\n    const onAddSong = (e) => {\r\n        const { name, value } = e.target;\r\n        setAddList({\r\n            ...addList,\r\n            [name]: value,\r\n        });\r\n    };\r\n    // 추가버튼\r\n    const onAddSongList = () => {\r\n        const list = {\r\n            title,\r\n            signer,\r\n        };\r\n\r\n        setMusicList([...musicList, list]);\r\n\r\n        setAddList({\r\n            title: \"\",\r\n            signer: \"\",\r\n        });\r\n    };\r\n    // 삭제버튼\r\n    const removeBtn = (title) => {\r\n        setMusicList(musicList.filter((el) => el.title !== title));\r\n        console.log(musicList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {musicList.map((e) => (\r\n                    <li>\r\n                        <h3>{e.title}</h3>\r\n                        <p>{e.signer}</p>\r\n                        <button onClick={() => removeBtn(e.title)}>삭제</button>\r\n                        <hr />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <p>\r\n                    곡명 : <input name=\"title\" value={title} onChange={onAddSong} />\r\n                </p>\r\n                <p>\r\n                    가수/작곡 : <input name=\"singer\" value={signer} onChange={onAddSong} />\r\n                </p>\r\n                <p>\r\n                    <button onClick={onAddSongList}>추가</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAAA;AAExD,SAASC,MAAM,GAAG;EAAA;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;;EAII;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAACC,YAAY,CAACI,QAAQ,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IAAED,KAAK;IAAEC;EAAO,CAAC,GAAGH,OAAO;EACjC;EACA,MAAMI,SAAS,GAAIC,CAAC,IAAK;IACrB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,UAAU,CAAC;MACP,GAAGD,OAAO;MACV,CAACM,IAAI,GAAGC;IACZ,CAAC,CAAC;EACN,CAAC;EACD;EACA,MAAME,aAAa,GAAG,MAAM;IACxB,MAAMC,IAAI,GAAG;MACTR,KAAK;MACLC;IACJ,CAAC;IAEDL,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEa,IAAI,CAAC,CAAC;IAElCT,UAAU,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;EACD;EACA,MAAMQ,SAAS,GAAIT,KAAK,IAAK;IACzBJ,YAAY,CAACD,SAAS,CAACe,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACX,KAAK,KAAKA,KAAK,CAAC,CAAC;IAC1DY,OAAO,CAACC,GAAG,CAAClB,SAAS,CAAC;EAC1B,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UACKA,SAAS,CAACmB,GAAG,CAAEX,CAAC,iBACb;QAAA,wBACI;UAAA,UAAKA,CAAC,CAACH;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAClB;UAAA,UAAIG,CAAC,CAACF;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACjB;UAAQ,OAAO,EAAE,MAAMQ,SAAS,CAACN,CAAC,CAACH,KAAK,CAAE;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACtD;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAA,wBACI;QAAA,WAAG,iBACM;UAAO,IAAI,EAAC,OAAO;UAAC,KAAK,EAAEA,KAAM;UAAC,QAAQ,EAAEE;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9D,eACJ;QAAA,WAAG,8BACS;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAED,MAAO;UAAC,QAAQ,EAAEC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACnE,eACJ;QAAA,uBACI;UAAQ,OAAO,EAAEK,aAAc;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEX;AAAC,GAzEQb,MAAM;AAAA,KAANA,MAAM;AA0Ef,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}