{"ast":null,"code":"var _jsxFileName = \"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /* \r\n  문제 1.\r\n    state를 다루기 위한 기초 문제입니다.\r\n  음악 목록 10가지의 mock data가 있습니다.\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n  삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n\n  // const [onPlusSong, setOnPlusSong] = useState(false);\n  const [addSong, setAddSong] = useState();\n  const [addSinger, setAddSinger] = useState();\n  const [onAddList, setOnAddList] = useState(false);\n  const [musicList, setMusicList] = useState(PlayListMock.playlist);\n  const onAddSong = e => {\n    setAddSong(e.target.value);\n  };\n  const onAddSinger = e => {\n    setAddSinger(e.target.value);\n  };\n  const addList = () => {\n    musicList.push({\n      title: addSong,\n      signer: addSinger\n    });\n    setOnAddList(prev => !prev);\n  };\n  const removeBtn = title => {\n    setMusicList(musicList.filter(el => el.title !== title));\n    console.log(musicList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: musicList.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: e.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.signer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeBtn(e.title),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onAddSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onAddSinger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addList,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"8LW2E5wWTtkRveATXGfRZWFX8x8=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["useRef","useState","PlayListMock","State1","addSong","setAddSong","addSinger","setAddSinger","onAddList","setOnAddList","musicList","setMusicList","playlist","onAddSong","e","target","value","onAddSinger","addList","push","title","signer","prev","removeBtn","filter","el","console","log","map"],"sources":["/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n    /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n\r\n    // const [onPlusSong, setOnPlusSong] = useState(false);\r\n    const [addSong, setAddSong] = useState();\r\n    const [addSinger, setAddSinger] = useState();\r\n    const [onAddList, setOnAddList] = useState(false);\r\n    const [musicList, setMusicList] = useState(PlayListMock.playlist);\r\n\r\n    const onAddSong = (e) => {\r\n        setAddSong(e.target.value);\r\n    };\r\n\r\n    const onAddSinger = (e) => {\r\n        setAddSinger(e.target.value);\r\n    };\r\n\r\n    const addList = () => {\r\n        musicList.push({\r\n            title: addSong,\r\n            signer: addSinger,\r\n        });\r\n        setOnAddList((prev) => !prev);\r\n    };\r\n\r\n    const removeBtn = (title) => {\r\n        setMusicList(musicList.filter((el) => el.title !== title));\r\n        console.log(musicList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {musicList.map((e) => (\r\n                    <li>\r\n                        <h3>{e.title}</h3>\r\n                        <p>{e.signer}</p>\r\n                        <button onClick={() => removeBtn(e.title)}>삭제</button>\r\n                        <hr />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <p>\r\n                    곡명 : <input onChange={onAddSong} />\r\n                </p>\r\n                <p>\r\n                    가수/작곡 : <input onChange={onAddSinger} />\r\n                </p>\r\n                <p>\r\n                    <button onClick={addList}>추가</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAAA;AAExD,SAASC,MAAM,GAAG;EAAA;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;;EAII;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,EAAE;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,EAAE;EAC5C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACC,YAAY,CAACU,QAAQ,CAAC;EAEjE,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACrBT,UAAU,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,WAAW,GAAIH,CAAC,IAAK;IACvBP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAME,OAAO,GAAG,MAAM;IAClBR,SAAS,CAACS,IAAI,CAAC;MACXC,KAAK,EAAEhB,OAAO;MACdiB,MAAM,EAAEf;IACZ,CAAC,CAAC;IACFG,YAAY,CAAEa,IAAI,IAAK,CAACA,IAAI,CAAC;EACjC,CAAC;EAED,MAAMC,SAAS,GAAIH,KAAK,IAAK;IACzBT,YAAY,CAACD,SAAS,CAACc,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACL,KAAK,KAAKA,KAAK,CAAC,CAAC;IAC1DM,OAAO,CAACC,GAAG,CAACjB,SAAS,CAAC;EAC1B,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UACKA,SAAS,CAACkB,GAAG,CAAEd,CAAC,iBACb;QAAA,wBACI;UAAA,UAAKA,CAAC,CAACM;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAClB;UAAA,UAAIN,CAAC,CAACO;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACjB;UAAQ,OAAO,EAAE,MAAME,SAAS,CAACT,CAAC,CAACM,KAAK,CAAE;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACtD;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAA,wBACI;QAAA,WAAG,iBACM;UAAO,QAAQ,EAAEP;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC,eACJ;QAAA,WAAG,8BACS;UAAO,QAAQ,EAAEI;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACxC,eACJ;QAAA,uBACI;UAAQ,OAAO,EAAEC,OAAQ;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEX;AAAC,GA/DQf,MAAM;AAAA,KAANA,MAAM;AAgEf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}