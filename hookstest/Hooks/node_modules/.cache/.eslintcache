[{"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/index.js":"1","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/reportWebVitals.js":"2","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/App.js":"3","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/Hooks.js":"4","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/State.js":"5","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/Detail.js":"6","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q2.js":"7","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q1.js":"8","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state2.js":"9","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q3.js":"10","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state3.js":"11","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js":"12","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/1.basic/q3components.js":"13","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/2.state/comment.js":"14","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/2.state/product.js":"15"},{"size":535,"mtime":1676150996000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1676150996000,"results":"18","hashOfConfig":"17"},{"size":607,"mtime":1676453566000,"results":"19","hashOfConfig":"17"},{"size":644,"mtime":1676438834000,"results":"20","hashOfConfig":"17"},{"size":545,"mtime":1676438929000,"results":"21","hashOfConfig":"17"},{"size":2478,"mtime":1677426791030,"results":"22","hashOfConfig":"17"},{"size":3112,"mtime":1676645440864,"results":"23","hashOfConfig":"17"},{"size":2283,"mtime":1676558917014,"results":"24","hashOfConfig":"17"},{"size":5061,"mtime":1677093489680,"results":"25","hashOfConfig":"17"},{"size":1694,"mtime":1676817386132,"results":"26","hashOfConfig":"17"},{"size":2486,"mtime":1677422628261,"results":"27","hashOfConfig":"17"},{"size":2191,"mtime":1677227747524,"results":"28","hashOfConfig":"17"},{"size":414,"mtime":1676823479934,"results":"29","hashOfConfig":"17"},{"size":1804,"mtime":1677093603707,"results":"30","hashOfConfig":"17"},{"size":684,"mtime":1677219595502,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"158s2s2",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/index.js",[],[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/reportWebVitals.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/App.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/Hooks.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/State.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/pages/Detail.js",["82","83"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport productList from \"../__mock__/products.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DetailPage() {\r\n    const params = useParams();\r\n    const { productNumber } = params;\r\n\r\n    const [state, setState] = useState(productList.products);\r\n    const [products, setProducts] = useState(\r\n        state.find((el) => el.productNumber === productNumber)\r\n    );\r\n    // input Ref\r\n    const reviewerInput = useRef();\r\n    const reviewInput = useRef();\r\n    const ratingInput = useRef();\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (!products) {\r\n            navigate(\"/state\");\r\n        }\r\n    }, []);\r\n\r\n    // 리뷰 추가 버튼\r\n    const onAddReviewBtn = () => {\r\n        const newContent = { ...products };\r\n        const newAddContent = {\r\n            reviewer: reviewerInput.current.value,\r\n            review: reviewInput.current.value,\r\n            rating: ratingInput.current.value,\r\n        };\r\n        newContent.Review.push(newAddContent);\r\n        setProducts(newContent);\r\n        console.log(products);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* \r\n      상세 페이지는 자유롭게 꾸미시면 됩니다.\r\n      아직 해당 부분의 진도가 나가지 않았기 때문에 주소의 파람을 가지고 올 수 있는 방법은\r\n      미리 콘솔에 찍어두었습니다.\r\n\r\n      단, 없는 번호 상품으로 접근 시 state페이지로 돌아가도록 구현해주세요\r\n    */}\r\n            {/* {params.productNumber} */}\r\n            <p>상품번호: {products.productNumber} </p>\r\n            <p>평점: {products.productRating}</p>\r\n            <p>리뷰 개수: {products.Review.length} </p>\r\n\r\n            <div>\r\n                <input ref={reviewerInput} placeholder=\"이름\" />\r\n                <input ref={reviewInput} placeholder=\"느낌평\" />\r\n                <input ref={ratingInput} placeholder=\"점수\" />\r\n                <button onClick={onAddReviewBtn}>작성 완료</button>\r\n            </div>\r\n\r\n            <hr />\r\n            {products.Review.map((el) => (\r\n                <>\r\n                    <p>이름 : {el.reviewer}</p>\r\n                    <p>느낌평 : {el.review}</p>\r\n                    <p>점수 : {el.rating}</p>\r\n                    <hr />\r\n                </>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default DetailPage;\r\n","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q2.js",["84"],[],"import { useRef, useState } from \"react\";\r\n\r\nfunction Q2() {\r\n    // 2-1\r\n    const arr = useRef([]);\r\n    const inputValue = useRef();\r\n    const [state, setState] = useState(false);\r\n    const [forceRender, setForceRender] = useState(false);\r\n\r\n    const onAddList = () => {\r\n        setForceRender((prev) => !prev);\r\n        arr.current.push({ value: inputValue.current.value });\r\n        // setState(false);\r\n    };\r\n\r\n    const onClickListAdd = () => {\r\n        setState(true);\r\n    };\r\n\r\n    // 2-2\r\n    const colorChangeBtn = useRef();\r\n\r\n    const colorBtn = () => {\r\n        colorChangeBtn.current.style = \"color: red\";\r\n    };\r\n    /* \r\n    문제2\r\n\r\n    2-1)\r\n        1. 추가를 누르면 배열에 값이 추가된다\r\n          1. 누르면 인풋 실시간 값을 가져와야함\r\n          2. 인풋 값을 arr에 넣어야한다.\r\n        2. 제출을 누르면 배열값들을 보여줘야한다.\r\n          1.제출을 누르면 arr 데이터를 다 보여줄수 있어야한다.\r\n\r\n        useRef에 관련한 문제입니다.\r\n\r\n        추가 버튼을 누르면 input에 있던 value는 배열 arr에 추가됩니다.\r\n        그러나, 추가 버튼을 누를 때마다 강제 랜더링 상태가 무조건 적으로 업데이트 됩니다.\r\n\r\n        이러한 상황에서 제출버튼을 누르면\r\n\r\n        지금까지 추가하였던 목록 배열(arr)이 \r\n        <ul>의 li의 항목으로 추가되어야합니다.\r\n\r\n        만약 제출되었을 때 아무런 항목이 없다면\r\n        <p>제출된 목록이 없습니다</p>이 노출되어야하며\r\n\r\n        제출된 항목이 있다면\r\n        <ul>만 노출되어야 합니다\r\n\r\n        이를 useRef의 특성을 고려하여 풀이해보세요 :)\r\n\r\n    2-2)\r\n        문제 2-2는 변경 버튼을 클릭하면\r\n        p태그의 색상이 다른 색상으로 변경됩니다.\r\n        \r\n        이는 state를 사용하는 것이 가장 올바른 방법이지만\r\n        어를 사용할 수 없는 어쩔 수 없는 상황에 놓여있습니다.\r\n\r\n        따라서 useRef는 사용하여 해당 문구의 색상을 변경해보세요 :)\r\n  */\r\n\r\n    return (\r\n        <>\r\n            <h1>문제2</h1>\r\n            <div>\r\n                <h2>문제 2-1</h2>\r\n                <p>\r\n                    <input ref={inputValue} />\r\n                </p>\r\n                <p>\r\n                    <button onClick={onAddList}>추가</button>\r\n                </p>\r\n                <p>\r\n                    <button onClick={onClickListAdd}>제출</button>\r\n                </p>\r\n                {!state ? (\r\n                    <p>제출된 목록이 없습니다</p>\r\n                ) : (\r\n                    <ul>{state && arr.current.map((el) => <li>{el.value}</li>)}</ul>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <h2>문제 2-2</h2>\r\n                <p ref={colorChangeBtn}> 이 문구는 아래 버튼을 누르면 색상이 바뀝니다</p>\r\n                <button onClick={colorBtn}>변경</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q2;\r\n","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q1.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state2.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/1.basic/q3.js",["85"],[],"import { useState, useEffect } from \"react\";\r\nimport Q3components from \"../../components/1.basic/q3components\";\r\n\r\nfunction Q3() {\r\n    /* \r\n    문제3\r\n    useEffect useState에 관련한 문제입니다\r\n    단체 줄넘기 대회에 출전하였습니다\r\n\r\n    줄넘기 시작 버튼을 누르면 \r\n    Q3components 컴포넌트가 보입니다.\r\n\r\n    Q3components 내부에는\r\n\r\n    해당 컴포넌트가 보이기 시작한 시점부터\r\n    2초마다 줄넘기 횟수가 1회 씩 증가하는 비즈니스 로직이 존재합니다\r\n\r\n    또한, 이러한 줄넘기 횟수 증가는 q3.js(index)에서도 확인할 수 있도록\r\n    <p> 줄넘기 횟수 : 0 </p> 에 횟수로 표시됩니다\r\n\r\n    줄넘기 중지 버튼을 누르면\r\n    해당 컴포넌트는 보이지 않아야하며, 줄넘기 횟수도 더이상 증가해서는 안됩니다.\r\n    또한, 줄넘기 횟수는 0으로 고정되어야합니다.\r\n  */\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [onStartStopBtn, setOnStartStopBtn] = useState(false);\r\n\r\n    const start = () => {\r\n        setOnStartStopBtn(true);\r\n    };\r\n\r\n    const stop = () => {\r\n        setOnStartStopBtn(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>문제3</h1>\r\n            <div>\r\n                <p> 줄넘기 횟수 : {count}</p>\r\n                {onStartStopBtn ? <Q3components setCount={setCount} /> : \"\"}\r\n                <p>\r\n                    <button onClick={start}>줄넘기 시작</button>\r\n                </p>\r\n                <p>\r\n                    <button onClick={stop}>줄넘기 중지</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q3;\r\n","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state3.js",["86","87"],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/hooks/2.state/state1.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/1.basic/q3components.js",["88"],[],"import { useEffect } from \"react\";\r\n\r\nfunction Q3components({ setCount }) {\r\n    useEffect(() => {\r\n        const jumpRope = setInterval(() => {\r\n            setCount((prev) => prev + 1);\r\n        }, 2000);\r\n        return () => {\r\n            clearInterval(jumpRope);\r\n            setCount(0);\r\n        };\r\n    }, []);\r\n\r\n    return <div> 🏃‍♂️ 줄넘기 ... ing </div>;\r\n}\r\nexport default Q3components;\r\n","/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/2.state/comment.js",[],[],"/Users/seonyeong/Desktop/seonyeong/hookstest/Hooks/src/components/2.state/product.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":10,"column":19,"nodeType":"91","messageId":"92","endLine":10,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":24,"column":8,"nodeType":"95","endLine":24,"endColumn":10,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":8,"column":12,"nodeType":"91","messageId":"92","endLine":8,"endColumn":23},{"ruleId":"89","severity":1,"message":"98","line":1,"column":20,"nodeType":"91","messageId":"92","endLine":1,"endColumn":29},{"ruleId":"89","severity":1,"message":"99","line":44,"column":20,"nodeType":"91","messageId":"92","endLine":44,"endColumn":29},{"ruleId":"89","severity":1,"message":"100","line":75,"column":7,"nodeType":"91","messageId":"92","endLine":75,"endColumn":8},{"ruleId":"93","severity":1,"message":"101","line":12,"column":8,"nodeType":"95","endLine":12,"endColumn":10,"suggestions":"102"},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'products'. Either include them or remove the dependency array.","ArrayExpression",["103"],"'forceRender' is assigned a value but never used.","'useEffect' is defined but never used.","'setOnList' is assigned a value but never used.","'S' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCount'. Either include it or remove the dependency array. If 'setCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [navigate, products]",{"range":"109","text":"110"},"Update the dependencies array to be: [setCount]",{"range":"111","text":"112"},[751,753],"[navigate, products]",[315,317],"[setCount]"]