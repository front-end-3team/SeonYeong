## 변수란?

- 변수(식별자)는 프로그래밍 언어에서 데이터를 관리하기 위한 핵심 개념이다.

**쉽게 말해~** 하나의 값을 저장한 메모리 공간을 식별하기 위해 붙인 이름이다. (값의 위치를 가리키는 상징적 이름)

---

## 변수를 사용하는 이유?

컴퓨터는 사람과 다르게 연산과 기억을 따로 분리 해서 하는데,    **CPU 사용(연산)  —> 메모리 사용(데이터 기억)**  한다.

**메모리셀(메모리의 집합체/1바이트[8비트])이 모여 ~  메모리가 된다. 

컴퓨터는 이런 방법으로 ~~연산을 한 뒤 메모리에 저장을 하는데,  CPU가 연산해서 만들어 낸 값은 재사용 불가❌ 

❗️메모리 주소를 통해 직접 접근하면 치명적 오류 발생 → 이유는 이미 메모리에 할당 된 값을 운영체제가 실수로 값을 변경 해버릴시 시스템이 멈춰버림. 

코드가 실행 될때 마다 **값이 저장된 메모리 주소는 변경**됨.  ▶️ 코드가 실행되기 이전에는 값이 저장된 **메모리 주소를 알 수 없음**. ▶️메모리 주소를 통해 **값에 직접 접근 하는 방법**은 옳지 않다.  

### 그래서!!!!!!!!!

프로그래밍 언어는 ~ 기억하고 싶은 값 ▶️ 메모리에 저장 ▶️ 저장된 값을 읽어 재사용 하기 위해 변수를 사용

---

## 변수에 여러개의 값 저장 방법

- 객체와, 배열을 사용함.

[예제]

//변수는 하나의 값을 저장하기 위한 수단.

let a = 1;

let b = 3;

//객체나 배열을 사용하면 여러개의 값을 하나로 그룹화 한 값으로 사용 가능.

let a = { id : 1 , name : lee }

let b = [

{ id : 1, name : Kim },

{ id : 2, name : park }

];

---

## 식별자란?

- 식별자는 값이 아니라 메모리 주소를 기억하고 그 공간에 저장된 값에 접근한다.
    
    식별자는 변수에만 국한되는 것이 아닌 , [변수, 함수, 클래스 등의 이름은 모두 식별자 이다.]
    
    ❗️즉, 메모리상에 어떠한 값을 식별할 수 있는 모든 것을 식별자 라고 부른다.
    

---

## 가비지 콜렉터(garbage collector)

- 애플리케이션이 할당한 메모리 공간을 주기적으로 검사하여 더 이상 사용되지 않는 메모리를 해제하는 기능.

[예제]

let score; // 변수 선언 undefined

score = 80; // 80 값을 할당

score = 90; // 90값을 재할당

현재 변수의 값은 90이다. 그래서 이전 값인 undefined 와 80은 변수를 가지고 있지 않게 된다.

즉, 어떤 식별자와도 연결되어 있지 않다.

undefined 와 80은 더이상 필요없는 값이기 때문에 이러한 불필요한 값들을 가비지 콜렉터가 알아서, 메모리에서 자동해제한다.

단, 메모리에서 언제 해제될지는 예측할 수 없다